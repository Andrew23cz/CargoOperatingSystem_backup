// <auto-generated />
using System;
using CargoOperatingSystem.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CargoOperatingSystem.Server.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220113153028_update05")]
    partial class update05
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CargoOperatingSystem.Server.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b3bc7e01-778b-400a-a7f6-3289c681d304",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dec0bc51-c291-4006-bd06-fedf4a89a984",
                            Email = "admin@localhost.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@LOCALHOST.COM",
                            NormalizedUserName = "ADMIN@LOCALHOST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBr9XFH96TOlcvwJ4RmRN4yosRgUljnFxpBS3KSHjnnK+R6qRF8Xlut8UqFc5s1wdg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c828b721-0f66-4d3d-87c4-f098d0077768",
                            TwoFactorEnabled = false,
                            UserName = "admin@localhost.com"
                        });
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Airline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Airline");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Arrival", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArrivalPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CarColour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DriverPhone")
                        .HasColumnType("int");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Arrival");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.AwbStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<int>("AwbCount")
                        .HasColumnType("int");

                    b.Property<string>("AwbNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AwbStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.HasIndex("CustomerId");

                    b.ToTable("AwbStock");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Consignee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HawbId")
                        .HasColumnType("int");

                    b.Property<int?>("MawbId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HawbId");

                    b.HasIndex("MawbId");

                    b.ToTable("Consignees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "La Palma 1566, Mexico City",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 1, 13, 16, 30, 27, 66, DateTimeKind.Local).AddTicks(7900),
                            DateUpdated = new DateTime(2022, 1, 13, 16, 30, 27, 78, DateTimeKind.Local).AddTicks(3814),
                            Email = "pedro@gmail.com",
                            Name = "Pedro Alvarez",
                            PhoneNumber = 250350450,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Address = "ShangriLa 255, Shanghai",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 1, 13, 16, 30, 27, 79, DateTimeKind.Local).AddTicks(9028),
                            DateUpdated = new DateTime(2022, 1, 13, 16, 30, 27, 79, DateTimeKind.Local).AddTicks(9074),
                            Email = "liu.chong@gmail.com",
                            Name = "Liu Chong",
                            PhoneNumber = 111222555,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Na Kopci 15, Hradec Kralove",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 1, 13, 16, 30, 27, 79, DateTimeKind.Local).AddTicks(9210),
                            DateUpdated = new DateTime(2022, 1, 13, 16, 30, 27, 79, DateTimeKind.Local).AddTicks(9215),
                            Email = "petr.a@seznam.cz",
                            Name = "Petr Adamec",
                            PhoneNumber = 111222555,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HqAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoicingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Fiege",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 1, 13, 16, 30, 27, 80, DateTimeKind.Local).AddTicks(4666),
                            DateUpdated = new DateTime(2022, 1, 13, 16, 30, 27, 80, DateTimeKind.Local).AddTicks(4685),
                            Email = "fiege.export@gmail.com",
                            HqAddress = "K letisti 15, Praha 6",
                            InvoicingAddress = "K letisti 15, Praha 6",
                            PhoneNumber = 123456789,
                            TaxNumber = "CZ12345678",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Agility",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 1, 13, 16, 30, 27, 80, DateTimeKind.Local).AddTicks(7104),
                            DateUpdated = new DateTime(2022, 1, 13, 16, 30, 27, 80, DateTimeKind.Local).AddTicks(7120),
                            Email = "air.export@agility.cz",
                            HqAddress = "U Zlicina 25, Praha 6",
                            InvoicingAddress = "U Zlicina 25, Praha 6",
                            PhoneNumber = 222333666,
                            TaxNumber = "CZ11145678",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "ATS",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 1, 13, 16, 30, 27, 80, DateTimeKind.Local).AddTicks(7131),
                            DateUpdated = new DateTime(2022, 1, 13, 16, 30, 27, 80, DateTimeKind.Local).AddTicks(7134),
                            Email = "export@ats.com",
                            HqAddress = "Laglerove 4, Praha 6",
                            InvoicingAddress = "Laglerove 4, Praha 6",
                            PhoneNumber = 444666888,
                            TaxNumber = "CZ22245678",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DeliveryAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("DestCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DriverPhone")
                        .HasColumnType("int");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoadAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OffloadAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OffloadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Dimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<int?>("MawbId")
                        .HasColumnType("int");

                    b.Property<int>("Pieces")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MawbId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Hawb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ChargeableWeight")
                        .HasColumnType("float");

                    b.Property<string>("ConsigneeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConsigneePhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("ConsigneeTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("GrossWeight")
                        .HasColumnType("float");

                    b.Property<string>("HawbNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MawbId")
                        .HasColumnType("int");

                    b.Property<int>("Pieces")
                        .HasColumnType("int");

                    b.Property<string>("ShipperAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipperPhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("ShipperTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MawbId");

                    b.ToTable("Hawbs");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DuzpDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InvoiceAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssuingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Mawb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ChargeableWeight")
                        .HasColumnType("float");

                    b.Property<string>("ConsigneeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConsigneePhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("ConsigneeTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GrossWeight")
                        .HasColumnType("float");

                    b.Property<string>("MawbAwbNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pieces")
                        .HasColumnType("int");

                    b.Property<int?>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<string>("ShipperAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipperPhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("ShipperTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId")
                        .IsUnique()
                        .HasFilter("[ShipmentId] IS NOT NULL");

                    b.ToTable("Mawbs");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArrivalId")
                        .HasColumnType("int");

                    b.Property<int>("AwbStockId")
                        .HasColumnType("int");

                    b.Property<double?>("ChargeableWeight")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GrossWeight")
                        .HasColumnType("float");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInvoiced")
                        .HasColumnType("bit");

                    b.Property<int?>("MawbId")
                        .HasColumnType("int");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pieces")
                        .HasColumnType("int");

                    b.Property<string>("ShipmentAwbNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.Property<int?>("WorkloadId")
                        .HasColumnType("int");

                    b.Property<string>("WorkloadStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalId");

                    b.HasIndex("AwbStockId")
                        .IsUnique();

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("WorkloadId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Shipper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HawbId")
                        .HasColumnType("int");

                    b.Property<int?>("MawbId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HawbId");

                    b.HasIndex("MawbId");

                    b.ToTable("Shippers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Aviaticka 55, Praha 6, 16000",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 1, 13, 16, 30, 27, 81, DateTimeKind.Local).AddTicks(1915),
                            DateUpdated = new DateTime(2022, 1, 13, 16, 30, 27, 81, DateTimeKind.Local).AddTicks(1934),
                            Email = "export@dhl.cz",
                            Name = "DHL Forwarding",
                            PhoneNumber = 555666999,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Industrialni 256, Ostrava, 354442",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 1, 13, 16, 30, 27, 81, DateTimeKind.Local).AddTicks(3538),
                            DateUpdated = new DateTime(2022, 1, 13, 16, 30, 27, 81, DateTimeKind.Local).AddTicks(3553),
                            Email = "expedice@foxcon.cz",
                            Name = "Foxcon cz",
                            PhoneNumber = 332266448,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            Address = "K sidlist 25, Praha 6, 16200",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 1, 13, 16, 30, 27, 81, DateTimeKind.Local).AddTicks(3563),
                            DateUpdated = new DateTime(2022, 1, 13, 16, 30, 27, 81, DateTimeKind.Local).AddTicks(3566),
                            Email = "prdel@starosta.cz",
                            Name = "Pavel Novotny",
                            PhoneNumber = 604225336,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HqAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoicingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("SupplierType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Arrow Mobile",
                            ContactPersonName = "Petr Pallat",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 1, 13, 16, 30, 27, 81, DateTimeKind.Local).AddTicks(9149),
                            DateUpdated = new DateTime(2022, 1, 13, 16, 30, 27, 81, DateTimeKind.Local).AddTicks(9167),
                            Email = "info@arrow.cz",
                            HqAddress = "K letisti 25, Praha 6, 16000",
                            InvoicingAddress = "K letisti 25, Praha 6, 16000",
                            PhoneNumber = 123456789,
                            TaxNumber = "CZ12345678",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Mayer",
                            ContactPersonName = "Metr Ojtik",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 1, 13, 16, 30, 27, 82, DateTimeKind.Local).AddTicks(1614),
                            DateUpdated = new DateTime(2022, 1, 13, 16, 30, 27, 82, DateTimeKind.Local).AddTicks(1629),
                            Email = "info@mayer.sk",
                            HqAddress = "Na Radosti 256, Bratislava, 11100",
                            InvoicingAddress = "Na Radosti 256, Bratislava, 11100",
                            PhoneNumber = 222333444,
                            TaxNumber = "SK12345678",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "Skyport",
                            ContactPersonName = "Jan Fero",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 1, 13, 16, 30, 27, 82, DateTimeKind.Local).AddTicks(1639),
                            DateUpdated = new DateTime(2022, 1, 13, 16, 30, 27, 82, DateTimeKind.Local).AddTicks(1643),
                            Email = "info@skyport.cz",
                            HqAddress = "Laglerove 4, Praha 6, 16100",
                            InvoicingAddress = "Laglerove 4, Praha 6, 16100",
                            PhoneNumber = 555777999,
                            TaxNumber = "CZ12345600",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Workload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcceptanceAssist")
                        .HasColumnType("int");

                    b.Property<int>("AcceptanceAssistDG")
                        .HasColumnType("int");

                    b.Property<int>("AfterOpeningHoursService")
                        .HasColumnType("int");

                    b.Property<int>("AwbIssuing")
                        .HasColumnType("int");

                    b.Property<string>("AwbNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AwbStockId")
                        .HasColumnType("int");

                    b.Property<int>("CargoLabels")
                        .HasColumnType("int");

                    b.Property<int>("CosultingDG")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentsCorrection")
                        .HasColumnType("int");

                    b.Property<int>("HawbIssuing")
                        .HasColumnType("int");

                    b.Property<int>("ImportCgoProcessing")
                        .HasColumnType("int");

                    b.Property<int>("ManualDataInsertion")
                        .HasColumnType("int");

                    b.Property<int>("PackingAssist")
                        .HasColumnType("int");

                    b.Property<int>("PickUpDocuments")
                        .HasColumnType("int");

                    b.Property<int>("PrintingCorrectedDocs")
                        .HasColumnType("int");

                    b.Property<int>("SecurityCheckAssist")
                        .HasColumnType("int");

                    b.Property<int>("SecurityCheckPrepare")
                        .HasColumnType("int");

                    b.Property<int>("SpecCargoLabels")
                        .HasColumnType("int");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WorkloadAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("AwbStockId");

                    b.ToTable("Workloads");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "8ccb2e70-33cd-43d6-90c8-ddfe47f462ac",
                            ConcurrencyStamp = "74cc8842-c9ff-4c8e-aae7-61057d3aa73e",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "6bef2159-5dd7-4924-b8b3-95386f8cc6ef",
                            ConcurrencyStamp = "dd21c2e5-d278-4988-934c-ff3ef8636592",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "b3bc7e01-778b-400a-a7f6-3289c681d304",
                            RoleId = "6bef2159-5dd7-4924-b8b3-95386f8cc6ef"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Arrival", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.AwbStock", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Airline", "Airline")
                        .WithMany("AwbStocks")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Customer", null)
                        .WithMany("AwbStocks")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Airline");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Consignee", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Hawb", null)
                        .WithMany("Consignees")
                        .HasForeignKey("HawbId");

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Mawb", null)
                        .WithMany("Consignees")
                        .HasForeignKey("MawbId");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Delivery", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Dimension", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Mawb", null)
                        .WithMany("Dimensions")
                        .HasForeignKey("MawbId");

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Shipment", "Shipment")
                        .WithMany("Dimensions")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Hawb", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Mawb", "Mawb")
                        .WithMany("Hawbs")
                        .HasForeignKey("MawbId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Mawb");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Invoice", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Mawb", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Shipment", "Shipment")
                        .WithOne("Mawb")
                        .HasForeignKey("CargoOperatingSystem.Shared.Domain.Mawb", "ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Shipment", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Arrival", "Arrival")
                        .WithMany()
                        .HasForeignKey("ArrivalId");

                    b.HasOne("CargoOperatingSystem.Shared.Domain.AwbStock", "AwbStock")
                        .WithOne("Shipment")
                        .HasForeignKey("CargoOperatingSystem.Shared.Domain.Shipment", "AwbStockId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Customer", "Customer")
                        .WithMany("Shipments")
                        .HasForeignKey("CustomerId");

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Delivery", "Delivery")
                        .WithMany("Shipments")
                        .HasForeignKey("DeliveryId");

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Invoice", null)
                        .WithMany("Shipments")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Workload", "Workload")
                        .WithMany()
                        .HasForeignKey("WorkloadId");

                    b.Navigation("Arrival");

                    b.Navigation("AwbStock");

                    b.Navigation("Customer");

                    b.Navigation("Delivery");

                    b.Navigation("Workload");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Shipper", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Hawb", null)
                        .WithMany("Shippers")
                        .HasForeignKey("HawbId");

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Mawb", null)
                        .WithMany("Shippers")
                        .HasForeignKey("MawbId");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Workload", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.AwbStock", "AwbStock")
                        .WithMany()
                        .HasForeignKey("AwbStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AwbStock");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CargoOperatingSystem.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CargoOperatingSystem.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CargoOperatingSystem.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CargoOperatingSystem.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Airline", b =>
                {
                    b.Navigation("AwbStocks");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.AwbStock", b =>
                {
                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Customer", b =>
                {
                    b.Navigation("AwbStocks");

                    b.Navigation("Invoices");

                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Delivery", b =>
                {
                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Hawb", b =>
                {
                    b.Navigation("Consignees");

                    b.Navigation("Shippers");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Invoice", b =>
                {
                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Mawb", b =>
                {
                    b.Navigation("Consignees");

                    b.Navigation("Dimensions");

                    b.Navigation("Hawbs");

                    b.Navigation("Shippers");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Shipment", b =>
                {
                    b.Navigation("Dimensions");

                    b.Navigation("Mawb");
                });
#pragma warning restore 612, 618
        }
    }
}
