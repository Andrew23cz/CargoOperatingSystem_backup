// <auto-generated />
using System;
using CargoOperatingSystem.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CargoOperatingSystem.Server.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220216095117_UpdatedMawbEntity")]
    partial class UpdatedMawbEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CargoOperatingSystem.Server.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b3bc7e01-778b-400a-a7f6-3289c681d304",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d0cbc80a-437b-4c82-815a-27f29b76275f",
                            Email = "admin@localhost.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@LOCALHOST.COM",
                            NormalizedUserName = "ADMIN@LOCALHOST.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAED+lt62ugtnwskf3uM8htIUHZx7Yd999rHxTPuPzrdxBmkn05qrFQD84VYrRl98wrw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cae33c1a-6756-4f67-9af4-f061edeb57ce",
                            TwoFactorEnabled = false,
                            UserName = "admin@localhost.com"
                        },
                        new
                        {
                            Id = "b3bc7e01-778b-400a-a7f6-3289c681d405",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8635a66d-d943-4cf6-8345-e2900be9d735",
                            Email = "test@test.cz",
                            EmailConfirmed = false,
                            FirstName = "TestFirstName",
                            LastName = "TestLastName",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEST@TEST.CZ",
                            NormalizedUserName = "TEST@TEST.CZ",
                            PasswordHash = "AQAAAAEAACcQAAAAEBXK+wzv5v9NyQjF/z5iSKxeI/7JWmI1ZoAVAJHs3slT8iIt6h1NMS2hILx/K7Qa5Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "856bdc92-f12e-4bfc-a1c6-665061cfc559",
                            TwoFactorEnabled = false,
                            UserName = "test@test.cz"
                        });
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Airline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AwbHeaderA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AwbHeaderB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Airline");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Arrival", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArrivalPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CarColour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DriverPhone")
                        .HasColumnType("int");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId")
                        .IsUnique();

                    b.HasIndex("SupplierId");

                    b.ToTable("Arrival");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.AwbStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<string>("AwbNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AwbStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.HasIndex("CustomerId");

                    b.ToTable("AwbStock");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Consignee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Consignees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressA = "La Palma 1566, Mexico City",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 16, 10, 51, 16, 163, DateTimeKind.Local).AddTicks(835),
                            DateUpdated = new DateTime(2022, 2, 16, 10, 51, 16, 165, DateTimeKind.Local).AddTicks(6049),
                            Email = "pedro@gmail.com",
                            Name = "Pedro Alvarez",
                            PhoneNumber = 250350450,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            AddressA = "ShangriLa 255, Shanghai",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 16, 10, 51, 16, 166, DateTimeKind.Local).AddTicks(9454),
                            DateUpdated = new DateTime(2022, 2, 16, 10, 51, 16, 166, DateTimeKind.Local).AddTicks(9482),
                            Email = "liu.chong@gmail.com",
                            Name = "Liu Chong",
                            PhoneNumber = 111222555,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            AddressA = "Na Kopci 15, Hradec Kralove",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 16, 10, 51, 16, 166, DateTimeKind.Local).AddTicks(9565),
                            DateUpdated = new DateTime(2022, 2, 16, 10, 51, 16, 166, DateTimeKind.Local).AddTicks(9568),
                            Email = "petr.a@seznam.cz",
                            Name = "Petr Adamec",
                            PhoneNumber = 111222555,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HqAddressA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HqAddressB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HqAddressC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IataCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoicingAddressA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoicingAddressB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoicingAddressC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Fiege",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 16, 10, 51, 16, 167, DateTimeKind.Local).AddTicks(3689),
                            DateUpdated = new DateTime(2022, 2, 16, 10, 51, 16, 167, DateTimeKind.Local).AddTicks(3707),
                            Email = "fiege.export@gmail.com",
                            HqAddressA = "K letisti 15, Praha 6",
                            InvoicingAddressA = "K letisti 15, Praha 6",
                            PhoneNumber = 123456789,
                            TaxNumber = "CZ12345678",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Agility",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 16, 10, 51, 16, 167, DateTimeKind.Local).AddTicks(5437),
                            DateUpdated = new DateTime(2022, 2, 16, 10, 51, 16, 167, DateTimeKind.Local).AddTicks(5450),
                            Email = "air.export@agility.cz",
                            HqAddressA = "U Zlicina 25, Praha 6",
                            InvoicingAddressA = "U Zlicina 25, Praha 6",
                            PhoneNumber = 222333666,
                            TaxNumber = "CZ11145678",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "ATS",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 16, 10, 51, 16, 167, DateTimeKind.Local).AddTicks(5458),
                            DateUpdated = new DateTime(2022, 2, 16, 10, 51, 16, 167, DateTimeKind.Local).AddTicks(5461),
                            Email = "export@ats.com",
                            HqAddressA = "Laglerove 4, Praha 6",
                            InvoicingAddressA = "Laglerove 4, Praha 6",
                            PhoneNumber = 444666888,
                            TaxNumber = "CZ22245678",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DeliveryAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("DestCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DriverPhone")
                        .HasColumnType("int");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoadAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LoadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OffloadAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OffloadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Dimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<int?>("MawbId")
                        .HasColumnType("int");

                    b.Property<int>("Pieces")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MawbId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Hawb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountingInfoA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountingInfoB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountingInfoC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentIataCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineAddressA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineAddressB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmountOfInsurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AwbNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ChargeableWeight")
                        .HasColumnType("float");

                    b.Property<string>("ChgsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commodity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommodityItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeAddressA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeAddressB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeAddressC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConsigneeId")
                        .HasColumnType("int");

                    b.Property<string>("ConsigneeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConsigneePhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeclaredValueCarriage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeclaredValueCustoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstCarrierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstFlightDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstFlightNoAndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GrossWeight")
                        .HasColumnType("float");

                    b.Property<string>("HandlingInfoA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HandlingInfoB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HandlingInfoC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HawbNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingAgentAddressA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingAgentAddressB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingAgentAddressC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssuingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuingPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MawbId")
                        .HasColumnType("int");

                    b.Property<string>("NatureAndQttyGoodsA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionalShippingInfoA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionalShippingInfoB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherChargeA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherChargeB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherChargeC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherChargeD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherChgsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pieces")
                        .HasColumnType("int");

                    b.Property<double>("RateCharge")
                        .HasColumnType("float");

                    b.Property<string>("RateClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sci")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondCarrierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondFlightDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondFlightNoAndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperAddressA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperAddressB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperAddressC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipperId")
                        .HasColumnType("int");

                    b.Property<string>("ShipperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipperPhoneNumber")
                        .HasColumnType("int");

                    b.Property<double>("TaxCC")
                        .HasColumnType("float");

                    b.Property<double>("TaxPP")
                        .HasColumnType("float");

                    b.Property<string>("ThirdCarrierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdFlightDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdFlightNoAndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalCharge")
                        .HasColumnType("float");

                    b.Property<double>("TotalCollect")
                        .HasColumnType("float");

                    b.Property<double>("TotalOtherChargesDueAgentCC")
                        .HasColumnType("float");

                    b.Property<double>("TotalOtherChargesDueAgentPP")
                        .HasColumnType("float");

                    b.Property<double>("TotalOtherChargesDueCarrierCC")
                        .HasColumnType("float");

                    b.Property<double>("TotalOtherChargesDueCarrierPP")
                        .HasColumnType("float");

                    b.Property<double>("TotalPrepaid")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValuationChargeCC")
                        .HasColumnType("float");

                    b.Property<double>("ValuationChargePP")
                        .HasColumnType("float");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.Property<double>("WeightChargeCC")
                        .HasColumnType("float");

                    b.Property<double>("WeightChargePP")
                        .HasColumnType("float");

                    b.Property<string>("WtVal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsigneeId");

                    b.HasIndex("MawbId");

                    b.HasIndex("ShipperId");

                    b.ToTable("Hawbs");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DuzpDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InvoiceAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssuingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Mawb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountingInfoA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountingInfoB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountingInfoC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentIataCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineAddressA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineAddressB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirlineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmountOfInsurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AwbNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ChargeableWeight")
                        .HasColumnType("float");

                    b.Property<string>("ChgsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commodity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommodityItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeAddressA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeAddressB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeAddressC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConsigneeId")
                        .HasColumnType("int");

                    b.Property<string>("ConsigneeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConsigneePhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeclaredValueCarriage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeclaredValueCustoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstCarrierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstFlightDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstFlightNoAndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GrossWeight")
                        .HasColumnType("float");

                    b.Property<string>("HandlingInfoA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HandlingInfoB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HandlingInfoC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingAgentAddressA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingAgentAddressB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingAgentAddressC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingAgentCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssuingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuingPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuingPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureAndQttyGoodsJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionalShippingInfoA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionalShippingInfoB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherChargeA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherChargeB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherChargeC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherChargeD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherChgsCodeCOL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherChgsCodePP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pieces")
                        .HasColumnType("int");

                    b.Property<double>("RateCharge")
                        .HasColumnType("float");

                    b.Property<string>("RateClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sci")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondCarrierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondFlightDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondFlightNoAndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<string>("ShipperAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperAddressA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperAddressB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperAddressC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipperEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipperId")
                        .HasColumnType("int");

                    b.Property<string>("ShipperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipperPhoneNumber")
                        .HasColumnType("int");

                    b.Property<double>("TaxCC")
                        .HasColumnType("float");

                    b.Property<double>("TaxPP")
                        .HasColumnType("float");

                    b.Property<string>("ThirdCarrierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdFlightDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdFlightNoAndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalCharge")
                        .HasColumnType("float");

                    b.Property<double>("TotalCollect")
                        .HasColumnType("float");

                    b.Property<double>("TotalOtherChargesDueAgentCC")
                        .HasColumnType("float");

                    b.Property<double>("TotalOtherChargesDueAgentPP")
                        .HasColumnType("float");

                    b.Property<double>("TotalOtherChargesDueCarrierCC")
                        .HasColumnType("float");

                    b.Property<double>("TotalOtherChargesDueCarrierPP")
                        .HasColumnType("float");

                    b.Property<double>("TotalPrepaid")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValuationChargeCC")
                        .HasColumnType("float");

                    b.Property<double>("ValuationChargePP")
                        .HasColumnType("float");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.Property<double>("WeightChargeCC")
                        .HasColumnType("float");

                    b.Property<double>("WeightChargePP")
                        .HasColumnType("float");

                    b.Property<string>("WtValCOL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WtValPP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConsigneeId");

                    b.HasIndex("ShipmentId")
                        .IsUnique();

                    b.HasIndex("ShipperId");

                    b.ToTable("Mawbs");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AwbNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AwbStockId")
                        .HasColumnType("int");

                    b.Property<double>("ChargeableWeight")
                        .HasColumnType("float");

                    b.Property<string>("Commodity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FirstFlightDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstFlightDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstFlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GrossWeight")
                        .HasColumnType("float");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInvoiced")
                        .HasColumnType("bit");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pieces")
                        .HasColumnType("int");

                    b.Property<DateTime>("SecondFlightDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecondFlightDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondFlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThirdFlightDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThirdFlightDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdFlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AwbStockId")
                        .IsUnique();

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Shipper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shippers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressA = "Aviaticka 55, Praha 6, 16000",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 16, 10, 51, 16, 167, DateTimeKind.Local).AddTicks(9152),
                            DateUpdated = new DateTime(2022, 2, 16, 10, 51, 16, 167, DateTimeKind.Local).AddTicks(9169),
                            Email = "export@dhl.cz",
                            Name = "DHL Forwarding",
                            PhoneNumber = 555666999,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            AddressA = "Industrialni 256, Ostrava, 354442",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 16, 10, 51, 16, 168, DateTimeKind.Local).AddTicks(486),
                            DateUpdated = new DateTime(2022, 2, 16, 10, 51, 16, 168, DateTimeKind.Local).AddTicks(500),
                            Email = "expedice@foxcon.cz",
                            Name = "Foxcon cz",
                            PhoneNumber = 332266448,
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            AddressA = "K sidlist 25, Praha 6, 16200",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 16, 10, 51, 16, 168, DateTimeKind.Local).AddTicks(508),
                            DateUpdated = new DateTime(2022, 2, 16, 10, 51, 16, 168, DateTimeKind.Local).AddTicks(510),
                            Email = "prdel@starosta.cz",
                            Name = "Pavel Novotny",
                            PhoneNumber = 604225336,
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HqAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoicingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("SupplierType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Arrow Mobile",
                            ContactPersonName = "Petr Pallat",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 16, 10, 51, 16, 168, DateTimeKind.Local).AddTicks(4539),
                            DateUpdated = new DateTime(2022, 2, 16, 10, 51, 16, 168, DateTimeKind.Local).AddTicks(4554),
                            Email = "info@arrow.cz",
                            HqAddress = "K letisti 25, Praha 6, 16000",
                            InvoicingAddress = "K letisti 25, Praha 6, 16000",
                            PhoneNumber = 123456789,
                            TaxNumber = "CZ12345678",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Mayer",
                            ContactPersonName = "Metr Ojtik",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 16, 10, 51, 16, 168, DateTimeKind.Local).AddTicks(6519),
                            DateUpdated = new DateTime(2022, 2, 16, 10, 51, 16, 168, DateTimeKind.Local).AddTicks(6532),
                            Email = "info@mayer.sk",
                            HqAddress = "Na Radosti 256, Bratislava, 11100",
                            InvoicingAddress = "Na Radosti 256, Bratislava, 11100",
                            PhoneNumber = 222333444,
                            TaxNumber = "SK12345678",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "Skyport",
                            ContactPersonName = "Jan Fero",
                            CreatedBy = "System",
                            DateCreated = new DateTime(2022, 2, 16, 10, 51, 16, 168, DateTimeKind.Local).AddTicks(6541),
                            DateUpdated = new DateTime(2022, 2, 16, 10, 51, 16, 168, DateTimeKind.Local).AddTicks(6544),
                            Email = "info@skyport.cz",
                            HqAddress = "Laglerove 4, Praha 6, 16100",
                            InvoicingAddress = "Laglerove 4, Praha 6, 16100",
                            PhoneNumber = 555777999,
                            TaxNumber = "CZ12345600",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Workload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcceptanceAssist")
                        .HasColumnType("int");

                    b.Property<int>("AcceptanceAssistDG")
                        .HasColumnType("int");

                    b.Property<int>("AfterOpeningHoursService")
                        .HasColumnType("int");

                    b.Property<int>("AwbIssuing")
                        .HasColumnType("int");

                    b.Property<int>("CargoLabels")
                        .HasColumnType("int");

                    b.Property<string>("CompanyIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CosultingDG")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentsCorrection")
                        .HasColumnType("int");

                    b.Property<int>("HawbIssuing")
                        .HasColumnType("int");

                    b.Property<int>("ImportCgoProcessing")
                        .HasColumnType("int");

                    b.Property<int>("ManualDataInsertion")
                        .HasColumnType("int");

                    b.Property<int>("PackingAssist")
                        .HasColumnType("int");

                    b.Property<int>("PickUpDocuments")
                        .HasColumnType("int");

                    b.Property<int>("PrintingCorrectedDocs")
                        .HasColumnType("int");

                    b.Property<int>("SecurityCheckAssist")
                        .HasColumnType("int");

                    b.Property<int>("SecurityCheckPrepare")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<int>("SpecCargoLabels")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WorkloadAmount")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId")
                        .IsUnique();

                    b.ToTable("Workloads");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "8ccb2e70-33cd-43d6-90c8-ddfe47f462ac",
                            ConcurrencyStamp = "123556dc-9f67-441e-b300-e632e1724a2d",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "6bef2159-5dd7-4924-b8b3-95386f8cc6ef",
                            ConcurrencyStamp = "716f5702-56bc-408f-a533-ca518987c1e3",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "b3bc7e01-778b-400a-a7f6-3289c681d304",
                            RoleId = "6bef2159-5dd7-4924-b8b3-95386f8cc6ef"
                        },
                        new
                        {
                            UserId = "b3bc7e01-778b-400a-a7f6-3289c681d405",
                            RoleId = "6bef2159-5dd7-4924-b8b3-95386f8cc6ef"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Arrival", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Shipment", "Shipment")
                        .WithOne("Arrival")
                        .HasForeignKey("CargoOperatingSystem.Shared.Domain.Arrival", "ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Supplier", "Supplier")
                        .WithMany("Arrivals")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Shipment");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.AwbStock", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Airline", "Airline")
                        .WithMany("AwbStocks")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Customer", "Customer")
                        .WithMany("AwbStocks")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Airline");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Delivery", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Dimension", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Mawb", null)
                        .WithMany("Dimensions")
                        .HasForeignKey("MawbId");

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Shipment", "Shipment")
                        .WithMany("Dimensions")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Hawb", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Consignee", "Consignee")
                        .WithMany("Hawbs")
                        .HasForeignKey("ConsigneeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Mawb", "Mawb")
                        .WithMany("Hawbs")
                        .HasForeignKey("MawbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Shipper", "Shipper")
                        .WithMany("Hawbs")
                        .HasForeignKey("ShipperId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Consignee");

                    b.Navigation("Mawb");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Invoice", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Mawb", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Consignee", "Consignee")
                        .WithMany("Mawbs")
                        .HasForeignKey("ConsigneeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Shipment", "Shipment")
                        .WithOne("Mawb")
                        .HasForeignKey("CargoOperatingSystem.Shared.Domain.Mawb", "ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Shipper", "Shipper")
                        .WithMany("Mawbs")
                        .HasForeignKey("ShipperId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Consignee");

                    b.Navigation("Shipment");

                    b.Navigation("Shipper");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Shipment", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.AwbStock", "AwbStock")
                        .WithOne("Shipment")
                        .HasForeignKey("CargoOperatingSystem.Shared.Domain.Shipment", "AwbStockId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Customer", "Customer")
                        .WithMany("Shipments")
                        .HasForeignKey("CustomerId");

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Delivery", "Delivery")
                        .WithMany("Shipments")
                        .HasForeignKey("DeliveryId");

                    b.HasOne("CargoOperatingSystem.Shared.Domain.Invoice", null)
                        .WithMany("Shipments")
                        .HasForeignKey("InvoiceId");

                    b.Navigation("AwbStock");

                    b.Navigation("Customer");

                    b.Navigation("Delivery");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Workload", b =>
                {
                    b.HasOne("CargoOperatingSystem.Shared.Domain.Shipment", "Shipment")
                        .WithOne("Workload")
                        .HasForeignKey("CargoOperatingSystem.Shared.Domain.Workload", "ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CargoOperatingSystem.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CargoOperatingSystem.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CargoOperatingSystem.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CargoOperatingSystem.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Airline", b =>
                {
                    b.Navigation("AwbStocks");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.AwbStock", b =>
                {
                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Consignee", b =>
                {
                    b.Navigation("Hawbs");

                    b.Navigation("Mawbs");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Customer", b =>
                {
                    b.Navigation("AwbStocks");

                    b.Navigation("Invoices");

                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Delivery", b =>
                {
                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Invoice", b =>
                {
                    b.Navigation("Shipments");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Mawb", b =>
                {
                    b.Navigation("Dimensions");

                    b.Navigation("Hawbs");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Shipment", b =>
                {
                    b.Navigation("Arrival");

                    b.Navigation("Dimensions");

                    b.Navigation("Mawb");

                    b.Navigation("Workload");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Shipper", b =>
                {
                    b.Navigation("Hawbs");

                    b.Navigation("Mawbs");
                });

            modelBuilder.Entity("CargoOperatingSystem.Shared.Domain.Supplier", b =>
                {
                    b.Navigation("Arrivals");
                });
#pragma warning restore 612, 618
        }
    }
}
