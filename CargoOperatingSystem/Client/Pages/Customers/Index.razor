@page "/customers/"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card card-title">List Of Customers</h3>
<hr />

<a href="/customers/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Customer
</a>
<br/>
<br/>

@if(Customers == null)
{
    <div class="alert alert-info">Loading Customers ...</div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Company Name</th>
                <th>Headquaters Address</th>
                <th>Invoicing Address</th>
                <th>Contact Person</th>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var customer in Customers)
            {
                <tr>
                    <td>@customer.CompanyName</td>
                    <td>@customer.HqAddressA<br/>@customer.HqAddressB<br/>@customer.HqAddressC</td>
                    <td>@customer.InvoicingAddressA<br/>@customer.InvoicingAddressB<br/>@customer.InvoicingAddressC</td>
                    <td>@customer.ContactPersonName</td>
                    <td>@customer.Email</td>
                    <td>@customer.PhoneNumber</td>
                    <td>
                        <a href="/customers/view/@customer.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/customers/edit/@customer.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick=@(()=>Delete(@customer.Id))>
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }

        </tbody>

    </table>
}




@code {

    private IList<Customer> Customers;

    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<IList<Customer>>(Endpoints.CustomersEndpoint);
    }

    private async Task Delete(int customerId)
    {
        var customer = Customers.First(q => q.Id == customerId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {customer.CompanyName}?");

        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.CustomersEndpoint}{customerId}");
            await OnInitializedAsync();
        }
    }

    


}
