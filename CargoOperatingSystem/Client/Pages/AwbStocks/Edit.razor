@page "/awbstocks/edit/{id:int}"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Create AWB Stock</h3>
<hr />
<br/>

<EditForm Model="@awbstock" OnValidSubmit="EditAwbStock">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">
        <label>Airline: </label>
        <div>
            <InputSelect @bind-Value="awbstock.AirlineId" @oninput="@PopulatePrefix" class="form-control">
                <option value="">-- Select Airline --</option>
                @if (Airlines != null)
                {
                    foreach (var airline in Airlines)
                    {
                        <option value="@airline.Id">@airline.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => awbstock.AirlineId)" />
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div>
                <label>AWB Number:</label>
                <label> @prefix</label>
            </div>
        </div>
        <div>
            <InputText @bind-Value="@awbstock.AwbNumber" class="form-control"/>
            <ValidationMessage For="@(()=> awbstock.AwbNumber)" />
        </div>
    </div>

    <div class="form-group">
        <label>Customer Assign (optional): </label>
        <div>
            <InputSelect @bind-Value="awbstock.CustomerId" class="form-control">
                <option value="">-- Select Customer --</option>
                @if (Customers != null)
                {
                    foreach (var customer in Customers)
                    {
                        <option value="@customer.Id">@customer.CompanyName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => awbstock.AirlineId)" />
        </div>
    </div>
            
    <button type="submit" class="btn btn-success btn-block">
        Edit AWB Stock
    </button>

</EditForm> 


@code {

    [Parameter] public int id { get; set; }
    AwbStock awbstock = new AwbStock();

    private IList<Airline> Airlines;
    private IList<Customer> Customers;

    private string prefix = "";

    protected async override Task OnParametersSetAsync()
    {
        awbstock = await _client.GetFromJsonAsync<AwbStock>($"{Endpoints.AwbStocksEndpoint}{id}");
        Airlines = await _client.GetFromJsonAsync<IList<Airline>>(Endpoints.AirlinesEndpoint);
        Customers = await _client.GetFromJsonAsync<IList<Customer>>(Endpoints.CustomersEndpoint);

    }

    private async Task PopulatePrefix()
    {
        var AirlinesForPrefix = await _client.GetFromJsonAsync<IList<Airline>>(Endpoints.AirlinesEndpoint);
        var airline = AirlinesForPrefix.First(q => q.Id == awbstock.AirlineId);
        prefix = airline.Prefix;
        await OnParametersSetAsync();
    }

    private async Task EditAwbStock()
    {
        
        if (awbstock.Shipment == null)
        {
            //EDIT AWBSTOCK
            await _client.PutAsJsonAsync($"{Endpoints.AwbStocksEndpoint}{id}", awbstock);

            //NAVIGATE BACK TO AWBSTOCK INDEX
            _navManager.NavigateTo(Endpoints.AwbStocksIndex);
        }
        else
        {
            await js.InvokeVoidAsync("alert", "AWB already booked! Not possible to edit at used state.");
        }
    }
}