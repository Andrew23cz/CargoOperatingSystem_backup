@page "/agentsubmithawbs/"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card card-title">List Of HAWBs</h3>
<hr />
<br/>


@if(AgentSubmitHawbs == null)
{
    <div class="alert alert-info">Loading HAWBs ...</div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>MAWB Number</th>
                <th>HAWB Number</th>
                <th>Pieces</th>
                <th>GW</th>
                <th>Vol</th>
                <th>ChW</th>
                <th>Shipper</th>
                <th>Consignee</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var agentSubmitHawb in AgentSubmitHawbs)
            {
                <tr>
                    <td>@agentSubmitHawb.AwbNumber</td>
                    <td>@agentSubmitHawb.HawbNumber</td>
                    <td>@agentSubmitHawb.Pieces</td>
                    <td>@agentSubmitHawb.GrossWeight</td>
                    <td>@agentSubmitHawb.Volume</td>
                    <td>@agentSubmitHawb.ChargeableWeight</td>
                    <td>@agentSubmitHawb.ShipperName</td>
                    <td>@agentSubmitHawb.ConsigneeName</td>
                    <td>
                        <a href="/hawbs/view/@agentSubmitHawb.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/hawbs/edit/@agentSubmitHawb.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick=@(()=>Delete(@agentSubmitHawb.Id))>
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }

        </tbody>

    </table>
}




@code {
    private IList<AgentSubmitHawb> AgentSubmitHawbs;

    protected async override Task OnInitializedAsync()
    {
         AgentSubmitHawbs = await _client.GetFromJsonAsync<IList<AgentSubmitHawb>>(Endpoints.AgentSubmitHawbsEndpoint);
    }

    private async Task Delete(int hawbId)
    {
        var hawb = AgentSubmitHawbs.First(q => q.Id == hawbId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete this HAWB: {hawb.HawbNumber}?");

        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.HawbsEndpoint}{hawbId}");
            await OnInitializedAsync();
        }
    }

    


}
