@page "/afrates/"
@inject HttpClient _client
@inject NavigationManager _navManager
@inject Microsoft.JSInterop.IJSRuntime js
@attribute [Authorize]

<h3 class="card card-title">Airfreight Rates</h3>
<hr />

<a href="/afrates/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Rate
</a>
<br/>
<br/>

@if(AfRates == null)
{
    <div class="alert alert-info">Loading Rates ...</div>
}
else
{
    <table class="table table-sm">
        <thead>
            <tr>
                <th>Airline Prefix</th>
                <th>Origin</th>
                <th>Destination</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var rate in AfRates)
            {
                <tr>
                    <td>@rate.CarrierPrefix</td>
                    <td>@rate.OriginAirportCode</td>
                    <td>@rate.DestinationAirportCode</td>
                    <td>
                        <a href="/afrates/view/@rate.Id" class="btn btn-primary btn-sm">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/afrates/edit/@rate.Id" class="btn btn-warning btn-sm">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger btn-sm" @onclick=@(()=>Delete(@rate.Id))>
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }

        </tbody>

    </table>

    
}

@code {

    private IList<AfRates> AfRates;

    protected async override Task OnInitializedAsync()
    {
        AfRates = await _client.GetFromJsonAsync<IList<AfRates>>(Endpoints.AfRatesEndpoint);
    }

    private async Task Delete(int afratesId)
    {
        var afrates = AfRates.First(q => q.Id == afratesId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete this rate line: {afrates.CarrierPrefix} / {afrates.DestinationCityCode}?");

        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.AfRatesEndpoint}{afratesId}");
            await OnInitializedAsync();
        }
    }

}
